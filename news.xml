<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://beta.erlang.org/news.xml" rel="self" type="application/atom+xml" /><link href="https://beta.erlang.org/" rel="alternate" type="text/html" /><updated>2021-10-04T16:03:18+00:00</updated><id>https://beta.erlang.org/news.xml</id><title type="html">Erlang/OTP | News</title><subtitle>The official home of the Erlang Programming Language</subtitle><entry><title type="html">OTP 24.1 Release</title><link href="https://beta.erlang.org/news/149" rel="alternate" type="text/html" title="OTP 24.1 Release" /><published>2021-09-21T00:00:00+00:00</published><updated>2021-09-21T00:00:00+00:00</updated><id>https://beta.erlang.org/news/149</id><content type="html" xml:base="https://beta.erlang.org/news/149">&lt;h1 id=&quot;otp-241&quot;&gt;OTP 24.1&lt;/h1&gt;

&lt;p&gt;Erlang/OTP 24.1 is the first maintenance patch release for OTP 24, with mostly
bug fixes as well as a few improvements.&lt;/p&gt;

&lt;p&gt;Below are some highlights of the release:&lt;/p&gt;

&lt;h2 id=&quot;highlights&quot;&gt;Highlights&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;OTP&lt;/strong&gt;: &lt;a href=&quot;https://erlang.org/doc/efficiency_guide/users_guide.html&quot;&gt;The Efficiency Guide&lt;/a&gt; has been extended with a chapter about maps.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Stdlib&lt;/strong&gt;: Most output functions in the &lt;code&gt;io&lt;/code&gt; module now print extra
  error information when provided with invalid arguments.
  The functions are: &lt;code&gt;io:format&lt;/code&gt;, &lt;code&gt;io:fwrite&lt;/code&gt;, &lt;code&gt;io:put_chars&lt;/code&gt;,
  &lt;code&gt;io:nl&lt;/code&gt; and &lt;code&gt;io:write&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Erts&lt;/strong&gt;: &lt;code&gt;init:stop()&lt;/code&gt; no longer unloads loaded code before
  terminating the runtime system. On systems with slow
  CPUs (such as Raspberry PI Zero), that can
  significantly speed up termination of the runtime system.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/patches/OTP-24.1&quot;&gt;For more details and downloads follow this link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Erlang/OTP source can also be found at GitHub on the official Erlang repository,
https://github.com/erlang/otp&lt;/p&gt;</content><author><name>Kenneth Lundin</name></author><category term="release," /><category term="OTP," /><category term="24.1" /><summary type="html">OTP 24.1</summary></entry><entry><title type="html">OTP 24.0 Release</title><link href="https://beta.erlang.org/news/148" rel="alternate" type="text/html" title="OTP 24.0 Release" /><published>2021-05-12T00:00:00+00:00</published><updated>2021-05-12T00:00:00+00:00</updated><id>https://beta.erlang.org/news/148</id><content type="html" xml:base="https://beta.erlang.org/news/148">&lt;h1 id=&quot;otp-24&quot;&gt;OTP 24&lt;/h1&gt;

&lt;p&gt;Erlang/OTP 24 is a new major release with new features, improvements as well as a few incompatibilities.&lt;/p&gt;

&lt;p&gt;Below are some of the highlights of the release:&lt;/p&gt;

&lt;h2 id=&quot;highlights&quot;&gt;Highlights&lt;/h2&gt;

&lt;h3 id=&quot;compiler&quot;&gt;compiler&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The compiler will now inline funs that are used only once immediately after their definition.&lt;/li&gt;
  &lt;li&gt;Compiler warnings and errors now include column numbers in addition to line numbers.&lt;/li&gt;
  &lt;li&gt;Variables bound between the keywords &lt;code&gt;'try'&lt;/code&gt; and &lt;code&gt;'of'&lt;/code&gt; can now be used in the clauses following the &lt;code&gt;'of'&lt;/code&gt; keyword
 (that is, in the success case when no exception was raised).&lt;/li&gt;
  &lt;li&gt;Generators in list and binary comprehensions will now
 raise a &lt;code&gt;{bad_generator,Generator}&lt;/code&gt; exception if the
 generator has an incorrect type
 Similarly, when a
 filter does not evaluate to a boolean, a
&lt;code&gt;{bad_filter,Filter}&lt;/code&gt; exception will be raised.&lt;/li&gt;
  &lt;li&gt;Warnings for expressions whose result was ignored that could be suppressed by
 using the anonymous variable &lt;code&gt;'_'&lt;/code&gt; can now be suppressed with a variable beginning with &lt;code&gt;'_'&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Selective receive optimization will now be applied much
 more often.
 The new &lt;code&gt;recv_opt_info&lt;/code&gt; compile flag can be used to print
 diagnostics relating to this optimization.
 You can read more about the selective receive
 optimization in the Efficiency Guide.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;erts-kernel-stdlib&quot;&gt;erts, kernel, stdlib&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;hex encoding and decoding functions added in the binary module&lt;/li&gt;
  &lt;li&gt;The BeamAsm JIT-compiler has been added to Erlang/OTP and will give a significant performance boost for many applications.
 The JIT-compiler is enabled by default on most x86 64-bit platforms that have a C++ compiler that can compile C++17.
 To verify that a JIT enabled emulator is running you can use &lt;code&gt;erlang:system_info(emu_flavor)&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;A compatibility adaptor for &lt;code&gt;gen_tcp&lt;/code&gt; to use the new socket API has been implemented (&lt;code&gt;gen_tcp_socket&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Extended error information for failing BIF calls as proposed in EEP 54 has been implemented.&lt;/li&gt;
  &lt;li&gt;Process aliases as outlined by EEP 53 has been introduced.&lt;/li&gt;
  &lt;li&gt;Implementation of EEP 56 in supervisor. It adds the concept of significant children as well as the &lt;code&gt;auto_shutdown&lt;/code&gt; supervisor flag. See the supervisor manual page for more information.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ftp&quot;&gt;ftp&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Add support for FTPES (explicit FTP over TLS).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ssl&quot;&gt;ssl&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Make TLS handshakes in Erlang distribution concurrent.&lt;/li&gt;
  &lt;li&gt;TLS connections now support EdDSA certificates.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wx&quot;&gt;wx&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The application has been completely rewritten in order
 to use wxWidgets version 3 as its base.&lt;/li&gt;
  &lt;li&gt;Added support for wxWebView.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;edoc&quot;&gt;edoc&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;EDoc is now capable of emitting EEP-48 doc chunks. This means that, with some
 configuration, community projects can now provide documentation for shell_docs
 the same way that OTP libraries did since OTP 23.0.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details about new features and potential incompatibilities see&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://erlang.org/download/OTP-24.0.README&quot;&gt;https://erlang.org/download/OTP-24.0.README&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pre built versions for Windows can be fetched here:
&lt;a href=&quot;https://erlang.org/download/otp_win32_24.0.exe&quot;&gt;https://erlang.org/download/otp_win32_24.0.exe&lt;/a&gt;
&lt;a href=&quot;https://erlang.org/download/otp_win64_24.0.exe&quot;&gt;https://erlang.org/download/otp_win64_24.0.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Online documentation can be browsed here:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://erlang.org/documentation/doc-12.0/doc&quot;&gt;http://erlang.org/documentation/doc-12.0/doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Erlang/OTP source can also be found at GitHub on the official Erlang repository,
&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;https://github.com/erlang/otp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many thanks to all the contributors.&lt;/p&gt;</content><author><name>Henrik Nord</name></author><category term="release," /><category term="OTP," /><category term="24" /><summary type="html">OTP 24</summary></entry><entry><title type="html">OTP 24.0 Release Candidate 3</title><link href="https://beta.erlang.org/news/147" rel="alternate" type="text/html" title="OTP 24.0 Release Candidate 3" /><published>2021-04-20T00:00:00+00:00</published><updated>2021-04-20T00:00:00+00:00</updated><id>https://beta.erlang.org/news/147</id><content type="html" xml:base="https://beta.erlang.org/news/147">&lt;p&gt;This is the last of three planned release candidates before the OTP 24 release.
 The intention with this release is to get feedback from our users. All feedback is welcome, even if it is only to say that it works for you.&lt;/p&gt;

&lt;p&gt;We encourage users to try it out and give us feedback either by creating an issue here &lt;a href=&quot;https://github.com/erlang/otp/issues&quot;&gt;https://github.com/erlang/otp/issues&lt;/a&gt;
 or by posting to the mailing list &lt;a href=&quot;mailto:erlang-questions@erlang.org&quot;&gt;erlang-questions@erlang.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Erlang/OTP 24 is a new major release with new features, improvements as well as a few incompatibilities. Some of the new
 features are highlighted below.&lt;/p&gt;

&lt;h2 id=&quot;highlights-rc3&quot;&gt;Highlights rc3&lt;/h2&gt;

&lt;h3 id=&quot;stdlib&quot;&gt;stdlib&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Implementation of EEP 56 in supervisor. It adds the concept of significant children as well as the auto_shutdown supervisor flag. See the supervisor manual page for more information.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;highlights-rc2&quot;&gt;Highlights rc2&lt;/h2&gt;

&lt;h3 id=&quot;compiler&quot;&gt;compiler&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The compiler will now inline funs that are used only once immediately after their definition.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;erts-kernel-stdlib&quot;&gt;erts, kernel, stdlib&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;hex encoding and decoding functions added in the binary module&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;there-is-as-usual-a-number-of-bug-fixes-and-improvements-detailed-in-the-readme&quot;&gt;There is as usual a number of bug fixes and improvements detailed in the readme.&lt;/h4&gt;

&lt;h2 id=&quot;highlights-rc1&quot;&gt;Highlights rc1&lt;/h2&gt;

&lt;h3 id=&quot;erts-kernel-stdlib-1&quot;&gt;erts, kernel, stdlib&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The BeamAsm JIT-compiler has been added to Erlang/OTP and will give a significant performance boost for many applications.
 The JIT-compiler is enabled by default on most x86 64-bit platforms that have a C++ compiler that can compile C++17.
 To verify that a JIT enabled emulator is running you can use &lt;code&gt;erlang:system_info(emu_flavor)&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;A compatibility adaptor for &lt;code&gt;gen_tcp&lt;/code&gt; to use the new socket API has been implemented (&lt;code&gt;gen_tcp_socket&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Extended error information for failing BIF calls as proposed in EEP 54 has been implemented.&lt;/li&gt;
  &lt;li&gt;Process aliases as outlined by EEP 53 has been introduced.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;compiler-1&quot;&gt;compiler&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Compiler warnings and errors now include column numbers in addition to line numbers.&lt;/li&gt;
  &lt;li&gt;Variables bound between the keywords &lt;code&gt;'try'&lt;/code&gt; and &lt;code&gt;'of'&lt;/code&gt; can now be used in the clauses following the &lt;code&gt;'of'&lt;/code&gt; keyword
 (that is, in the success case when no exception was raised).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ftp&quot;&gt;ftp&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Add support for FTPES (explicit FTP over TLS).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ssl&quot;&gt;ssl&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Support for the “early data” feature for TLS 1.3 servers and clients.&lt;/li&gt;
  &lt;li&gt;Make TLS handshakes in Erlang distribution concurrent.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wx&quot;&gt;wx&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The application has been completely rewritten in order
 to use wxWidgets version 3 as its base.&lt;/li&gt;
  &lt;li&gt;Added support for wxWebView.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;edoc&quot;&gt;edoc&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;EDoc is now capable of emitting EEP-48 doc chunks. This means that, with some configuration, community projects
 can now provide documentation for shell_docs the same way that OTP libraries did since OTP 23.0.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details about new features and potential incompatibilities see
&lt;a href=&quot;https://erlang.org/download/OTP-24.0-rc3.README&quot;&gt;https://erlang.org/download/OTP-24.0-rc3.README&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pre built versions for Windows can be fetched here:
&lt;a href=&quot;http://erlang.org/download/otp_win32_24.0-rc3.exe&quot;&gt;http://erlang.org/download/otp_win32_24.0-rc3.exe&lt;/a&gt;
&lt;a href=&quot;http://erlang.org/download/otp_win64_24.0-rc3.exe&quot;&gt;http://erlang.org/download/otp_win64_24.0-rc3.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Online documentation can be browsed here:
&lt;a href=&quot;http://erlang.org/documentation/doc-12.0-rc3/doc/&quot;&gt;http://erlang.org/documentation/doc-12.0-rc3/doc/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Erlang/OTP source can also be found at GitHub on the official Erlang repository,
&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;https://github.com/erlang/otp&lt;/a&gt;&lt;/p&gt;</content><author><name>Henrik Nord</name></author><category term="release,candidate," /><category term="OTP," /><category term="24" /><summary type="html">This is the last of three planned release candidates before the OTP 24 release. The intention with this release is to get feedback from our users. All feedback is welcome, even if it is only to say that it works for you.</summary></entry><entry><title type="html">OTP 24.0 Release Candidate 2</title><link href="https://beta.erlang.org/news/146" rel="alternate" type="text/html" title="OTP 24.0 Release Candidate 2" /><published>2021-03-26T00:00:00+00:00</published><updated>2021-03-26T00:00:00+00:00</updated><id>https://beta.erlang.org/news/146</id><content type="html" xml:base="https://beta.erlang.org/news/146">&lt;p&gt;This is the second of three planned release candidates before the OTP 24 release.
 The intention with this release is to get feedback from our users. All feedback is welcome, even if it is only to say that it works for you.&lt;/p&gt;

&lt;p&gt;We encourage users to try it out and give us feedback either by creating an issue here &lt;a href=&quot;https://github.com/erlang/otp/issues&quot;&gt;https://github.com/erlang/otp/issues&lt;/a&gt;
 or by posting to the mailing list &lt;a href=&quot;mailto:erlang-questions@erlang.org&quot;&gt;erlang-questions@erlang.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Erlang/OTP 24 is a new major release with new features, improvements as well as a few incompatibilities. Some of the new
 features are highlighted below.&lt;/p&gt;

&lt;h2 id=&quot;highlights-rc2&quot;&gt;Highlights rc2&lt;/h2&gt;

&lt;h3 id=&quot;compiler&quot;&gt;compiler&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The compiler will now inline funs that are used only once immediately after their definition.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;erts-kernel-stdlib&quot;&gt;erts, kernel, stdlib&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;hex encoding and decoding functions added in the binary module&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;there-is-as-usual-a-number-of-bug-fixes-and-improvements-detailed-in-the-readme&quot;&gt;There is as usual a number of bug fixes and improvements detailed in the readme.&lt;/h4&gt;

&lt;h2 id=&quot;highlights-rc1&quot;&gt;Highlights rc1&lt;/h2&gt;

&lt;h3 id=&quot;erts-kernel-stdlib-1&quot;&gt;erts, kernel, stdlib&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The BeamAsm JIT-compiler has been added to Erlang/OTP and will give a significant performance boost for many applications.
 The JIT-compiler is enabled by default on most x86 64-bit platforms that have a C++ compiler that can compile C++17.
 To verify that a JIT enabled emulator is running you can use &lt;code&gt;erlang:system_info(emu_flavor)&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;A compatibility adaptor for &lt;code&gt;gen_tcp&lt;/code&gt; to use the new socket API has been implemented (&lt;code&gt;gen_tcp_socket&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Extended error information for failing BIF calls as proposed in EEP 54 has been implemented.&lt;/li&gt;
  &lt;li&gt;Process aliases as outlined by EEP 53 has been introduced.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;compiler-1&quot;&gt;compiler&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Compiler warnings and errors now include column numbers in addition to line numbers.&lt;/li&gt;
  &lt;li&gt;Variables bound between the keywords &lt;code&gt;'try'&lt;/code&gt; and &lt;code&gt;'of'&lt;/code&gt; can now be used in the clauses following the &lt;code&gt;'of'&lt;/code&gt; keyword
 (that is, in the success case when no exception was raised).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ftp&quot;&gt;ftp&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Add support for FTPES (explicit FTP over TLS).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ssl&quot;&gt;ssl&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Support for the “early data” feature for TLS 1.3 servers and clients.&lt;/li&gt;
  &lt;li&gt;Make TLS handshakes in Erlang distribution concurrent.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wx&quot;&gt;wx&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The application has been completely rewritten in order
 to use wxWidgets version 3 as its base.&lt;/li&gt;
  &lt;li&gt;Added support for wxWebView.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;edoc&quot;&gt;edoc&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;EDoc is now capable of emitting EEP-48 doc chunks. This means that, with some configuration, community projects
 can now provide documentation for shell_docs the same way that OTP libraries did since OTP 23.0.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details about new features and potential incompatibilities see
&lt;a href=&quot;https://erlang.org/download/OTP-24.0-rc2.README&quot;&gt;https://erlang.org/download/OTP-24.0-rc2.README&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pre built versions for Windows can be fetched here:
&lt;a href=&quot;http://erlang.org/download/otp_win32_24.0-rc2.exe&quot;&gt;http://erlang.org/download/otp_win32_24.0-rc2.exe&lt;/a&gt;
&lt;a href=&quot;http://erlang.org/download/otp_win64_24.0-rc2.exe&quot;&gt;http://erlang.org/download/otp_win64_24.0-rc2.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Online documentation can be browsed here:
&lt;a href=&quot;http://erlang.org/documentation/doc-12.0-rc2/doc/&quot;&gt;http://erlang.org/documentation/doc-12.0-rc2/doc/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Erlang/OTP source can also be found at GitHub on the official Erlang repository,
&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;https://github.com/erlang/otp&lt;/a&gt;&lt;/p&gt;</content><author><name>Henrik Nord</name></author><category term="release,candidate," /><category term="OTP," /><category term="24" /><summary type="html">This is the second of three planned release candidates before the OTP 24 release. The intention with this release is to get feedback from our users. All feedback is welcome, even if it is only to say that it works for you.</summary></entry><entry><title type="html">OTP 23.3 Release</title><link href="https://beta.erlang.org/news/145" rel="alternate" type="text/html" title="OTP 23.3 Release" /><published>2021-03-24T00:00:00+00:00</published><updated>2021-03-24T00:00:00+00:00</updated><id>https://beta.erlang.org/news/145</id><content type="html" xml:base="https://beta.erlang.org/news/145">&lt;p&gt;Erlang/OTP 23.3 is the third and final maintenance patch package for OTP 23, with mostly bug fixes as well as a few improvements.&lt;/p&gt;

&lt;p&gt;A full list of bug fixes and improvements in the &lt;a href=&quot;https://erlang.org/download/OTP-23.3.README&quot;&gt;readme&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;download-and-documentation&quot;&gt;Download and documentation&lt;/h4&gt;

&lt;p&gt;Online documentation can be browsed here:
&lt;a href=&quot;https://erlang.org/documentation/doc-11.2/doc&quot;&gt;https://erlang.org/documentation/doc-11.2/doc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pre-built versions for Windows can be fetched here:
&lt;a href=&quot;https://erlang.org/download/otp_win32_23.3.exe&quot;&gt;https://erlang.org/download/otp_win32_23.3.exe&lt;/a&gt;
&lt;a href=&quot;https://erlang.org/download/otp_win64_23.3.exe&quot;&gt;https://erlang.org/download/otp_win64_23.3.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Erlang/OTP source can also be found at GitHub on the official Erlang repository:
&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;https://github.com/erlang/otp&lt;/a&gt;&lt;/p&gt;</content><author><name>Henrik Nord</name></author><category term="release," /><category term="OTP," /><category term="23" /><summary type="html">Erlang/OTP 23.3 is the third and final maintenance patch package for OTP 23, with mostly bug fixes as well as a few improvements.</summary></entry><entry><title type="html">OTP 24.0 Release Candidate 1</title><link href="https://beta.erlang.org/news/144" rel="alternate" type="text/html" title="OTP 24.0 Release Candidate 1" /><published>2021-02-24T00:00:00+00:00</published><updated>2021-02-24T00:00:00+00:00</updated><id>https://beta.erlang.org/news/144</id><content type="html" xml:base="https://beta.erlang.org/news/144">&lt;h1 id=&quot;otp-24-release-candidate-1&quot;&gt;OTP 24 Release Candidate 1&lt;/h1&gt;

&lt;p&gt;This is the first of three planned release candidates before the OTP 24 release.
 The intention with this release is to get feedback from our users. All feedback is welcome, even if it is only to say that it works for you.&lt;/p&gt;

&lt;p&gt;We encourage users to try it out and give us feedback either by creating an issue here &lt;a href=&quot;https://github.com/erlang/otp/issues&quot;&gt;https://github.com/erlang/otp/issues&lt;/a&gt;
 or by posting to the mailing list &lt;a href=&quot;mailto:erlang-questions@erlang.org&quot;&gt;erlang-questions@erlang.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Erlang/OTP 24 is a new major release with new features, improvements as well as a few incompatibilities. Some of the new
 features are highlighted below.&lt;/p&gt;

&lt;h2 id=&quot;highlights&quot;&gt;Highlights&lt;/h2&gt;

&lt;h3 id=&quot;erts-kernel-stdlib&quot;&gt;erts, kernel, stdlib&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The BeamAsm JIT-compiler has been added to Erlang/OTP and will give a significant performance boost for many applications.
 The JIT-compiler is enabled by default on most x86 64-bit platforms that have a C++ compiler that can compile C++17.
 To verify that a JIT enabled emulator is running you can use &lt;code&gt;erlang:system_info(emu_flavor)&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;A compatibility adaptor for &lt;code&gt;gen_tcp&lt;/code&gt; to use the new socket API has been implemented (&lt;code&gt;gen_tcp_socket&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Extended error information for failing BIF calls as proposed in EEP 54 has been implemented.&lt;/li&gt;
  &lt;li&gt;Process aliases as outlined by EEP 53 has been introduced.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;compiler&quot;&gt;compiler&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Compiler warnings and errors now include column numbers in addition to line numbers.&lt;/li&gt;
  &lt;li&gt;Variables bound between the keywords &lt;code&gt;'try'&lt;/code&gt; and &lt;code&gt;'of'&lt;/code&gt; can now be used in the clauses following the &lt;code&gt;'of'&lt;/code&gt; keyword
 (that is, in the success case when no exception was raised).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ftp&quot;&gt;ftp&lt;/h3&gt;

&lt;p&gt;Add support for FTPES (explicit FTP over TLS).&lt;/p&gt;

&lt;h3 id=&quot;ssl&quot;&gt;ssl&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Support for the “early data” feature for TLS 1.3 servers and clients.&lt;/li&gt;
  &lt;li&gt;Make TLS handshakes in Erlang distribution concurrent.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wx&quot;&gt;wx&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The application has been completely rewritten in order
 to use wxWidgets version 3 as its base.&lt;/li&gt;
  &lt;li&gt;Added support for wxWebView.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;edoc&quot;&gt;edoc&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;EDoc is now capable of emitting EEP-48 doc chunks. This means that, with some configuration, community projects
 can now provide documentation for shell_docs the same way that OTP libraries did since OTP 23.0.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details about new features and potential incompatibilities see
&lt;a href=&quot;https://erlang.org/download/OTP-24.0-rc1.README&quot;&gt;https://erlang.org/download/OTP-24.0-rc1.README&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pre built versions for Windows can be fetched here:
&lt;a href=&quot;http://erlang.org/download/otp_win32_24.0-rc1.exe&quot;&gt;http://erlang.org/download/otp_win32_24.0-rc1.exe&lt;/a&gt;
&lt;a href=&quot;http://erlang.org/download/otp_win64_24.0-rc1.exe&quot;&gt;http://erlang.org/download/otp_win64_24.0-rc1.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Online documentation can be browsed here:
&lt;a href=&quot;http://erlang.org/documentation/doc-12.0-rc1/doc/&quot;&gt;http://erlang.org/documentation/doc-12.0-rc1/doc/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Erlang/OTP source can also be found at GitHub on the official Erlang repository,
&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;https://github.com/erlang/otp&lt;/a&gt;&lt;/p&gt;</content><author><name>Henrik Nord</name></author><summary type="html">OTP 24 Release Candidate 1</summary></entry><entry><title type="html">OTP 23.2 Release</title><link href="https://beta.erlang.org/news/143" rel="alternate" type="text/html" title="OTP 23.2 Release" /><published>2020-12-16T00:00:00+00:00</published><updated>2020-12-16T00:00:00+00:00</updated><id>https://beta.erlang.org/news/143</id><content type="html" xml:base="https://beta.erlang.org/news/143">&lt;p&gt;Erlang/OTP 23.2 is the second maintenance patch release for OTP 23, with mostly bug fixes as well as a few improvements.&lt;/p&gt;

&lt;p&gt;A few of the changes and highlights are:&lt;/p&gt;

&lt;h3 id=&quot;ssl&quot;&gt;SSL&lt;/h3&gt;

&lt;p&gt;Handle extraneous certs in certificate chains as well as chains that are incomplete but can be reconstructed or unordered chains. The cert and certfile options will now accept a list of certificates so that the user may specify the chain explicitly.&lt;/p&gt;

&lt;h3 id=&quot;potential-incompatibility&quot;&gt;Potential incompatibility&lt;/h3&gt;

&lt;h4 id=&quot;stdlib&quot;&gt;stdlib&lt;/h4&gt;

&lt;p&gt;Improved the API and documentation of the uri_string module. Added a new chapter to the Users Guide about Uniform Resource Identifiers and their handling with the new API. Added two new API functions: uri_string:allowed_characters/0 and uri_string:percent_decode/1.&lt;/p&gt;

&lt;p&gt;This change has been marked as potentially incompatible as uri_string:normalize/2 used to decode percent-encoded character triplets that corresponded to characters not in the reserved set. After this change, uri_string:normalize/2 will only decode those percent-encoded triplets that correspond to characters in the unreserved set (ALPHA / DIGIT / “-“ / “.” / “_” / “~”).&lt;/p&gt;

&lt;p&gt;A full list of bug fixes and improvements in the &lt;a href=&quot;https://erlang.org/download/OTP-23.2.README&quot;&gt;readme&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;download-and-documentation&quot;&gt;Download and documentation&lt;/h4&gt;

&lt;p&gt;Online documentation can be browsed here:
&lt;a href=&quot;https://erlang.org/documentation/doc-11.1.4/doc&quot;&gt;https://erlang.org/documentation/doc-11.1.4/doc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pre-built versions for Windows can be fetched here:
&lt;a href=&quot;https://erlang.org/download/otp_win32_23.2.exe&quot;&gt;https://erlang.org/download/otp_win32_23.2.exe&lt;/a&gt;
&lt;a href=&quot;https://erlang.org/download/otp_win64_23.2.exe&quot;&gt;https://erlang.org/download/otp_win64_23.2.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Erlang/OTP source can also be found at GitHub on the official Erlang repository:
&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;https://github.com/erlang/otp&lt;/a&gt;&lt;/p&gt;</content><author><name>Henrik Nord</name></author><category term="release," /><category term="OTP," /><category term="23" /><summary type="html">Erlang/OTP 23.2 is the second maintenance patch release for OTP 23, with mostly bug fixes as well as a few improvements.</summary></entry><entry><title type="html">ThinkingElixir 017: PODCAST: JIT compiler for BEAM with Lukas Larsson &amp;amp; John Högberg</title><link href="https://beta.erlang.org/news/142" rel="alternate" type="text/html" title="ThinkingElixir 017: PODCAST: JIT compiler for BEAM with Lukas Larsson &amp;amp; John Högberg" /><published>2020-10-13T00:00:00+00:00</published><updated>2020-10-13T00:00:00+00:00</updated><id>https://beta.erlang.org/news/142</id><content type="html" xml:base="https://beta.erlang.org/news/142">&lt;p&gt;Lukas Larsson and John Högberg from the OTP team are talking about the new JIT implementation for the BEAM in this PODCAST from ThinkingElixir.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://thinkingelixir.com/podcast-episodes/017-jit-compiler-for-beam-with-lukas-larsson-and-john-hogberg/&quot;&gt;https://thinkingelixir.com/podcast-episodes/017-jit-compiler-for-beam-with-lukas-larsson-and-john-hogberg/ &lt;/a&gt;&lt;/p&gt;</content><author><name>Kenneth Lundin</name></author><category term="JIT," /><category term="BEAM" /><summary type="html">Lukas Larsson and John Högberg from the OTP team are talking about the new JIT implementation for the BEAM in this PODCAST from ThinkingElixir.</summary></entry><entry><title type="html">OTP 23.1 Release</title><link href="https://beta.erlang.org/news/141" rel="alternate" type="text/html" title="OTP 23.1 Release" /><published>2020-09-23T00:00:00+00:00</published><updated>2020-09-23T00:00:00+00:00</updated><id>https://beta.erlang.org/news/141</id><content type="html" xml:base="https://beta.erlang.org/news/141">&lt;h2 id=&quot;otp-231&quot;&gt;OTP 23.1&lt;/h2&gt;

&lt;p&gt;Erlang/OTP 23.1 is a the first maintenance patch release for OTP 23, with mostly bug fixes as well as a few improvements.&lt;/p&gt;

&lt;h3 id=&quot;vulnerability-fix&quot;&gt;Vulnerability fix&lt;/h3&gt;

&lt;p&gt;A vulnerability in the httpd module (inets application) regarding directory traversal that was introduced in OTP 22.3.1 and corrected in OTP 22.3.4.6. It was also introduced in OTP 23.0 and corrected in OTP 23.1 The vulnerability is registered as CVE-2020-25623.
 The vulnerability is only exposed if the http server (httpd) in the inets application is used. The vulnerability makes it possible to read arbitrary files which the Erlang system has read access to with for example a specially prepared http request.&lt;/p&gt;

&lt;h3 id=&quot;general-build-issues&quot;&gt;General build issues&lt;/h3&gt;

&lt;p&gt;Adjust /bin/sh to /system/bin/sh in scripts when installing on Android.
 Changes in build system to make it build for macOS 11.0 with Apple Silicon. Also corrected execution of match specs to work on Apple Silicon.&lt;/p&gt;

&lt;h3 id=&quot;full-list-of-bug-fixes-and-improvements-in-the-readme&quot;&gt;Full list of bug fixes and improvements in the readme.&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://erlang.org/download/OTP-23.1.README&quot;&gt;http://erlang.org/download/OTP-23.1.README&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;download-and-doc&quot;&gt;Download and doc&lt;/h4&gt;

&lt;p&gt;Pre built versions for Windows can be fetched here:
&lt;a href=&quot;http://erlang.org/download/otp_win32_23.1.exe&quot;&gt;http://erlang.org/download/otp_win32_23.1.exe&lt;/a&gt;
&lt;a href=&quot;http://erlang.org/download/otp_win64_23.1.exe&quot;&gt;http://erlang.org/download/otp_win64_23.1.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Online documentation can be browsed here:
&lt;a href=&quot;http://erlang.org/documentation/doc-11.1/doc&quot;&gt;http://erlang.org/documentation/doc-11.1/doc&lt;/a&gt;
 The Erlang/OTP source can also be found at GitHub on the official Erlang repository,
&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;https://github.com/erlang/otp&lt;/a&gt;&lt;/p&gt;</content><author><name>Henrik Nord</name></author><category term="release," /><category term="OTP," /><category term="23" /><summary type="html">OTP 23.1</summary></entry><entry><title type="html">OTP 23 Release</title><link href="https://beta.erlang.org/news/140" rel="alternate" type="text/html" title="OTP 23 Release" /><published>2020-05-13T00:00:00+00:00</published><updated>2020-05-13T00:00:00+00:00</updated><id>https://beta.erlang.org/news/140</id><content type="html" xml:base="https://beta.erlang.org/news/140">&lt;h2 id=&quot;otp-23&quot;&gt;OTP 23&lt;/h2&gt;

&lt;p&gt;Erlang/OTP 23 is a new major release with new features, improvements as well as a few incompatibilities.&lt;/p&gt;

&lt;h3 id=&quot;potential-incompatibilities&quot;&gt;Potential Incompatibilities&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;SSL&lt;/strong&gt;: * Support for SSL 3.0 is completely removed.&lt;/li&gt;
  &lt;li&gt;TLS 1.3 is added to the list of default supported versions.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;erl_interface&lt;/code&gt;: Removed the deprecated parts of &lt;code&gt;erl_interface&lt;/code&gt; (&lt;code&gt;erl_interface.h&lt;/code&gt; and essentially all C functions with prefix &lt;code&gt;erl_&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;The deprecated &lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; BIF now returns an empty list instead of a stacktrace. &lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; is scheduled for removal in OTP 24.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;improvements-and-new-features&quot;&gt;Improvements and new features&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ssh&lt;/strong&gt;:&lt;/li&gt;
  &lt;li&gt;OpenSSH 6.5 introduced a new file representation of keys called &lt;code&gt;openssh-key-v1&lt;/code&gt;. This is now supported with the exception of handling encrypted keys.&lt;/li&gt;
  &lt;li&gt;Algorithm configuration could now be done in a .config file. This is useful for example to enable an algorithm that is disabled by default without need to change the code.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SSL&lt;/strong&gt;:&lt;/li&gt;
  &lt;li&gt;Support for the middlebox compatibility mode makes the TLS 1.3 handshake look more like a TLS 1.2 handshake and increases the chance of successfully establishing TLS 1.3 connections through legacy middleboxes.&lt;/li&gt;
  &lt;li&gt;Add support for key exchange with Edward curves and PSS-RSA padding in signature verification&lt;/li&gt;
  &lt;li&gt;The possibility to run Erlang distribution without relying on EPMD has been extended. To achieve this a couple of new options to the inet distribution has been added.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;-dist_listen false&lt;/code&gt; Setup the distribution channel, but do not listen for incoming connection.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;-erl_epmd_port Port&lt;/code&gt; Configure a default port that the built-in EPMD client should return.&lt;/li&gt;
  &lt;li&gt;A first EXPERIMENTAL &lt;code&gt;socket&lt;/code&gt; backend to
&lt;code&gt;gen_tcp&lt;/code&gt; and &lt;code&gt;inet&lt;/code&gt; has been implemented. &lt;code&gt;gen_udp&lt;/code&gt; and &lt;code&gt;gen_sctp&lt;/code&gt; will follow.
 Putting &lt;code&gt;{inet_backend, socket}&lt;/code&gt; as first option to &lt;code&gt;listen()&lt;/code&gt; or &lt;code&gt;connect()&lt;/code&gt; makes it easy to try this for existing code&lt;/li&gt;
  &lt;li&gt;A new module &lt;code&gt;erpc&lt;/code&gt; in kernel which implements an enhanced subset of the operations provided by the &lt;code&gt;rpc&lt;/code&gt; module. Enhanced in the sense that it makes it possible to distinguish between returned value, raised exceptions and other errors. &lt;code&gt;erpc&lt;/code&gt; also has better performance and scalability than the original &lt;code&gt;rpc&lt;/code&gt; implementation. This by utilizing the newly introduced &lt;code&gt;spawn_request()&lt;/code&gt; BIF. Also the &lt;code&gt;rpc&lt;/code&gt; module benefits from these improvements by utilizing &lt;code&gt;erpc&lt;/code&gt; when possible.&lt;/li&gt;
  &lt;li&gt;Scalability and performance Improvements plus new functionality regarding distributed spawn operations.&lt;/li&gt;
  &lt;li&gt;In binary matching, the size of the segment to be matched is now allowed to be a guard expression (EEP-52)&lt;/li&gt;
  &lt;li&gt;When matching with maps the keys can now be guard expressions (EEP-52).&lt;/li&gt;
  &lt;li&gt;ssh: support for TCP/IP port forwarding, a.k.a tunnelling a.k.a as tcp-forward/direct-tcp is implemented. In the OpenSSH client, this corresponds to the options -L and -R.&lt;/li&gt;
  &lt;li&gt;Allow underscores in numeric literals to improve readability. Examples: &lt;code&gt;123_456_789&lt;/code&gt;, &lt;code&gt;16#1234_ABCD&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;New functions in the shell for displaying documentation for Erlang modules, functions and types. The
 functions are:&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;h/1,2,3&lt;/code&gt; – Print the documentation for a &lt;code&gt;Module:Function/Arity&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ht/1,2,3&lt;/code&gt; – Print the type documentation for a &lt;code&gt;Module:Type/Arity&lt;/code&gt;.
 The embedded documentation is created as docchunks (EEP 48) when building the Erlang/OTP documentation.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;kernel&lt;/strong&gt;: The module &lt;code&gt;pg&lt;/code&gt; with a new implementation of distributed named process groups is introduced. The old module &lt;code&gt;pg2&lt;/code&gt; is deprecated and scheduled for removal in OTP 24.&lt;/li&gt;
  &lt;li&gt;Our tool chain for building the Windows packages is upgraded with new C++ compiler, Java compiler, OpenSSL libraries and wxWidgets versions. We are now using WSL (the Linux Subsystem for Windows when building) which makes it easier to handle the build environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details see
&lt;a href=&quot;http://erlang.org/download/otp_src_23.0.readme&quot;&gt;http://erlang.org/download/otp_src_23.0.readme&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pre built versions for Windows can be fetched here:
&lt;a href=&quot;http://erlang.org/download/otp_win32_23.0.exe&quot;&gt;http://erlang.org/download/otp_win32_23.0.exe&lt;/a&gt;
&lt;a href=&quot;http://erlang.org/download/otp_win64_23.0.exe&quot;&gt;http://erlang.org/download/otp_win64_23.0.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Online documentation can be browsed here:
&lt;a href=&quot;http://erlang.org/documentation/doc-11.0/doc&quot;&gt;http://erlang.org/documentation/doc-11.0/doc&lt;/a&gt;
 The Erlang/OTP source can also be found at GitHub on the official Erlang repository,
&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;https://github.com/erlang/otp&lt;/a&gt;&lt;/p&gt;</content><author><name>Henrik Nord</name></author><category term="release," /><category term="OTP" /><category term="23" /><summary type="html">OTP 23</summary></entry></feed>